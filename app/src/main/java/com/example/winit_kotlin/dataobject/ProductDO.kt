package com.example.winit_kotlin.dataobject

import android.widget.EditText
import java.io.Serializable
import java.util.Vector

data class ProductDO(
    var LineNo: String = "",
    var OrderNo: String = "",
    var RelatedLineId: String = "",
    var ProductId: String = "",
    var CategoryId: String = "",
    var SKU: String = "",
    var Description: String = "",
    var itemMode: String = "",
    var arabicDescription: String = "",
    var Description1: String = "",
    var UnitsPerCases: Int = 0,
    var BatchCode: String = "",
    var UOM: String = "",
    var ShelfUOM: String = "PC",
    var StoreUOM: String = "CAR",
    var secondaryUOM: String = "",
    var primaryUOM: String = "",
    var CaseBarCode: String = "",
    var isScanned: Boolean = true,
    var UnitBarCode: String = "",
    var ItemType: String? = null,
    var ItemSubType: String = "",
    var IsStructural: String? = null,
    var PricingKey: String? = null,
    var brand: String = "",
    var brandcode: String = "",
    var invoiceNo: String = "",
    var cases: String = "",
    var units: String = "",
    var StoreQTY: String = "",
    var ShelfQTY: String = "",
    var shelfunits: String = "",
    var promotionId: String = "",
    var promotionType: String = "",
    var isCustomerMSL: Boolean = false,
    var preCases: String = "0",
    var preUnits: String = "0",
    var ActpreUnits: String = "0",
    var ActpreCases: String = "0",
    var totalCases: Float = 0f,
    var totalUnits: Int = 0,
    var recomCases: String = "0.0",
    var recomUnits: Float = 0f,
    var strExpiryDate: String = "",
    var deliveredCases: Float = 0f,
    var orderedCases: Float = 0f,
    var inventoryQty: Float = 0f,
    var orderedUnits: Int = 0,
    var itemPrice: Float = 0f,
    var totalPrice: Float = 0f,
    var itemImage: String = "",
    var barcode: String = "",
    var target: String = "",
    var returnedCases: Float = 0f,
    var returnedUnits: Int = 0,
    var isReccomended: Boolean = false,
    var isDiscountApplied: Boolean = false,
    var isAvailable: Boolean = false,
    var Discount: Float = 0f,
    var isCaptured: Boolean = false,
    var isAlreadyCaptured: Boolean = false,
    var isCaptureInventory: Boolean = false,
    var isMustSell: Boolean = false,
    var isNPDItem: Boolean = false,
    var isHistoryItem: Boolean = false,
    var historyItemStatus: Int = 100,
    var sequence: Int = 0,
    var sequence1: Int = 0,
    var discountType: Int = 0,
    var actualDiscount: Float = 0f,
    var reason: String = "",
    var remarks: String = "",
    var isMusthave: Boolean = false,
    var isFavourite: Boolean = false,
    var isNew: Boolean = false,
    var musthaveQty: Int = 0,
    var missedQty: Int = 0,
    var totalStoreQty: Int = 0,
    var totalBSQty: Int = 0,
    var totalStoreQtyHighUOM: Int = 0,
    var totalBSQtyHighUOM: Int = 0,
    var isReturnCategory: Boolean = false,
    var casePrice: Float = 0f,
    var unitSellingPrice: Float = 0f,
    var invoiceAmount: Float = 0f,
    var discountAmount: Float = 0f,
    var priceUsedLevel1: Float = 0f,
    var priceUsedLevel2: Float = 0f,
    var etCases: EditText? = null,
    var etUnits: EditText? = null,
    var etEmptyJar: EditText? = null,
    var isAdvanceOrder: Boolean = false,
    var isPromotional: Boolean = false,
    var depositPrice: Float = 0f,
    var emptyCasePrice: Float = 0f,
    var DiscountAmt: Float = 0f,
    var PromoLineNo: Int = 0,
    var promoCode: String? = null,
    var imagePath: String? = null,
    var TaxGroupCode: String = "0",
    var TaxPercentage: Float = 0f,
    var ModelQty: Float = 0f,
    var ToFillQty: Float = 0f,
    var AvailableQty: Float = 0f,
    var ReOrderQty: Float = 0f,
    var ReplenishQty: Float = 0f,
    var DamagedQty: Float = 0f,
    var ExpiredQty: Float = 0f,
    var ReturnedQty: Float = 0f,
    var Classifications: Int = -1,
    var DisplayOrder: Int = -1,
    var productStatus: Int = 0,
    var status: Int = 5,
    var categoryName: String = "",
    var subCategoryName: String = "",
    var vecDamageImages: ArrayList<String>? = null,
    var vecDamageImagesNew: Vector<DamageImageDO>? = null,
    var vecUOM: Vector<String> = Vector(),
    var isPromoOrder: Boolean = false,
    var itemFlag: Int = 0,
    var isCaptureInventoryDone: Boolean = false,
    var itemClassification: Int = 0,
    var uomLevelUsed: Int = -1,
    var hashArrUoms: HashMap<String, UOMConversionFactorDO>? = HashMap(),
    var arrUoms: Vector<String>? = Vector(),
    var arrStoreItems: ArrayList<UOMConversionFactorDO> = ArrayList(),
    var itemGroupLevel5: String = ""
) : Serializable, Cloneable {
    @Throws(CloneNotSupportedException::class)
    public override fun clone(): ProductDO {
        return ProductDO(
            LineNo = this.LineNo,
            OrderNo = this.OrderNo,
            RelatedLineId = this.RelatedLineId,
            ProductId = this.ProductId,
            CategoryId = this.CategoryId,
            SKU = this.SKU,
            Description = this.Description,
            itemMode = this.itemMode,
            arabicDescription = this.arabicDescription,
            Description1 = this.Description1,
            UnitsPerCases = this.UnitsPerCases,
            BatchCode = this.BatchCode,
            UOM = this.UOM,
            ShelfUOM = this.ShelfUOM,
            StoreUOM = this.StoreUOM,
            secondaryUOM = this.secondaryUOM,
            primaryUOM = this.primaryUOM,
            CaseBarCode = this.CaseBarCode,
            UnitBarCode = this.UnitBarCode,
            ItemType = this.ItemType,
            PricingKey = this.PricingKey,
            brand = this.brand,
            brandcode = this.brandcode,
            invoiceNo = this.invoiceNo,
            cases = this.cases,
            units = this.units,
            preCases = this.preCases,
            preUnits = this.preUnits,
            orderedCases = this.orderedCases,
            orderedUnits = this.orderedUnits,
            itemPrice = this.itemPrice,
            returnedCases = this.returnedCases,
            returnedUnits = this.returnedUnits,
            recomCases = this.recomCases,
            recomUnits = this.recomUnits,
            reason = this.reason,
            isMusthave = this.isMusthave,
            musthaveQty = this.musthaveQty,
            categoryName = this.categoryName,
            discountAmount = this.discountAmount,
            strExpiryDate = this.strExpiryDate,

            isHistoryItem = this.isHistoryItem,
            historyItemStatus = this.historyItemStatus,
            sequence = this.sequence,
            isCaptureInventoryDone = this.isCaptureInventoryDone
        )
    }
}
